vim:set nowrap:

Tapes :

- C_Deb_Pas		installed (C). Debugger? Pascal?
- OS32_Pascal		installed: pascal compiler.
- FortranVII		installed: development and optimising compiler
- UnvFortrSwPkg		universal Fortran compiler

- sortMergeII		reads ok, but implies COBOL
- DMS32			reads ok, but implies COBOL, possibly Fortran
- OS32Medit		reads ok, needs terminal config
- IUG tapes		software tools works, lots of things don't (3200?)

- sort-merge		does not read
- COBOLupgrd		does not read

Tips/quirks :

- MTM copy, rename, etc. cannot "see" file with /99 type account ref.

- Use SET PRIVATE and SET GROUP to switch accounts, and to copy files
  between accounts.


$DEFINE command:

 (Gleaned mostly from reading CSS files)

- $DEF 1,<NAME>,ST( )         give variable a name (must be uppercase)
- $DEF 1,,ST(Hello world)     string value
- $DEF 1,,ST(@1) LD0 ST(@2)   null coalescing
- $DEF 1,,CUR(USER)           MTM user name (process name)
- $DEF 1,,CUR(EOT)            current PREVENT/ENABLE PROMPT
- $DEF 1,,CUR(PRIV)           current SET PRIVATE account
- $DEF 1,,CUR(GROUP)          current SET GROUP account
- $DEF 1,,CUR(CSS)            current SET CSS account
- $DEF 1,,DVOL(SYS)           default volume for /s
- $DEF 1,,VOL(FD)             volume component of file name
- $DEF 1,,FILE(FD)            name component of file name
- $DEF 1,,EXT(FD)             extension component of file name
- $DEF 1,,ACC(FD)             account component of file name
- $DEF 1,,REQ(COOKIE)         GIVE COOKIE (must be uppercase)
- $DEF 1,,HC(4000-@2)         hexadecimal computation

- $DEF 1,,ST(@@=/I.NPLACE/) LD2 ST(OFF) GO0 CL(T) ST(ON)

  Keyword argument I(NPLACE)=1, double 'at' for up a CSS level.
  LD2 ?
  GO0 ?
  CL(T) ?

  (MTMMAC.TSK hexdump record 200)

- $DEF 1,,DC(4000-@2)         decimal computation exists, but does it work?
- $DEF 1,,UPPER(@*1)          convert string to uppercase
- $DEF 1,,LOWER(@*1)          convert string to lowercase

- $DEF G8,SILENT,ST(@*G8) LD2 ST(1) GO0 CL(T)

  - ternary: IF @*G8 not set THEN STRING(1) ELSE CLEAR(T)

  (MTMMAC.TSK hexdump records 199-200)

- VOLUMENAME(fd)                  filename components
- FILENAME(fd)                            "
- EXTENSION(fd)                           "
- ACCOUNT(fd)                             "
- DVOLUMENAME(SYS|CSS)            SET VOLUME or SET CSS names
- CURRENT                         see below
- HCOMPUTE(expr)                  hexadecimal calculation
- DCOMPUTE(expr)                  decimal calculation
- DHCONVERT(dec)                  dec to hex conversion
- HDCONVERT(hex)                  hex to dec conversion
- UPPERCASE(@1)                   convert string to upper
- LOWERCASE(@1)                   convert string to lower
- LENGTH(@1)                      string length
- REQUIRED(<SOMETHING>)           GIVE SOMETHING (must be uppercase)
- STRING(hello world)             string literal
- SEARCH, POSITION, SUBSTRING     string functions (see below)

  (Some special semantics here: L/T, D/U, and CLEAR with T/L.)

- CLEAR(L)                        unset a variable
- CLEAR(T)                        unset a variable
- LD, TD, LU, TU, GO              logical operators, with digit suffix

  (MTMMAC.TSK hexdump record 204)

- CURRENT(PRIVATE|GROUP|CSS)      SET PRIVATE, GROUP, CSS accounts
- CURRENT(USERNAME)               username (MTM session name)
- CURRENT(INTERACTIVE)            terminal id
- CURRENT(BATCH)                  always returns null in interactive
- CURRENT(DATE|TIME)              current date or time
- CURRENT(EOT)                    exit status of last task

- See also "Utilisation of Perkin-Elmer Operating System Features" table
  2 (p22) for $IF operators.


Quirky $DEFINE syntax for string functions:

  (Found in IUG-161 OS/32 AND UTILITY DEVELOPMENT CSS PROCEDURES.
   Match parameter against a list of values, note strange delimiters.)

    $DEF 1,,SEARCH('#',ONE'TWO'THREE'FOUR'FIVE,@1)
    $IFNNULL @*1
       $WRITE PARAMETER 1 IS VALID, MATCHES '@*1'
    $ELSE
       $WRITE PARAMETER 1 INVALID
    $ENDC

  (Referred to in MTM Software Installation Guide, examples found in
   IUG-161. Similarly quirky: note required terminator char '#' after
   param 2 of substr.)

    $DEF 1,,STR(Hello world!)
    $DEF 2,,SUBSTR('#',@*1#,7,5)
    $WRITE '@*1' SUSTRING RETURNS '@*2'

  (Also in mentioned in MTM Software Installation Guide. Examples in
   IUG-192 HERCULES UTILITIES. Note again requires you to specify a
   terminator character.)

    $DEF 1,,POSITION('#',:#,@1#)    ;* find position of colon
    $DEF 2,,SUBSTR('#',@1#,0,@*1)   ;* extract device from before colon

   ***
   *** Do not use spaces after commas, because they are interpreted as
   *** part of the string to search!
   ***
   *** SEARCH p2 list must be uppercase. SUBSTR and POSITION p2 need not
   *** be a variable, may be uppercase or lowercase string literal. Just
   *** don't include quotes or STRING operator, just text and the required
   *** terminator character.
   ***


'Undocumented' MTM commands:

  (Probably in the missing MTM manuals, but I got these from the IUG-104
   LIBTOOLS tape. Much more readable than the $DEFINE command. The Fortran
   tape also has examples in EOU61F7.CSS/11. Interestingly, EOU62F7.CSS/11
   does not use $LOCAL, so perhaps it was deprecated in favour of more
   powerful but cumbersome $DEFINE syntax.)

    $LOCAL @name(length), @nam2(length), ...    (lowercase is ok)
    $SET @name = world                          (lowercase is ok)
    $WRITE Hello @name
    $FREE @name

  (But also note syntax for using IV/GV names, see IUG-118 HANDY CSS'S)

    $define 1,HELLO,str(Hello world!)
    $define g9,NINES,str(9999)
    $display ivars
    $write greet='@*/HELLO/'   ;* internal variable (implicit)
    $write greet='@*i/HELLO/'  ;* internal variable (explicit)
    $write nines='@*g/NINES/'  ;* global variable (requires explicit)

  ('Keyword arguments', examples in IUG-118, IUG-161.)

    $define 1,,str(@=/OPT/)       returns value if OPT=value is passed
                                  on the command line, null if option is
                                  absent
    $define 2,,str(@=/O.PTION/)   dot allows keyword to be abbreviated

    $ifnnull @=/OPT/
       $write OPT present: '@=/OPT/'
    $else
       $write OPT absent
    $endc

    Positional parameters must come BEFORE any keyword arguments. If you
    pass a positional parameter after a keyword argument, you'll get a
    KEYW-ERR and a slightly confusing explanation.


CSS verbs that don't work in MTM:

  $TRANSFER

  And various operator commands:

  DISPLAY ACCOUNTING (not SYSGEN'd anyway)
  DISPLAY MAP        (not short for MEMORY)
  DISPLAY STATUS
  DISPLAY TASKS
  DISPLAY VOLUMES


MTM operator commands:

  (MTMMAC.TSK hexdump record 3)

- .mtm add <tt>                   enable terminal
- .mtm broadcast <message>        send message to all logged-in users
- .mtm message <user> <message>   send message to single user
- .mtm inquire                    report batch status
- .mtm purge <fd>                 remove batch job
- .mtm submit <td>                submit batch job
- .mtm remove <tt>                disable terminal
- .mtm terminate <tt>             kick user off
- .mtm quiesce                    no more logins, end MTM when all off
- .mtm status                     report interactive and batch status
- .mtm atf <fd>                   ?
- .mtm psm                        PSM scheduler, needs to be SYSGEN'd in
- .mtm lle                        3200 only, and requires PSM


Some more clustered MTM strings:

- MTMMAC.TSK hex record 203: SYSTEM, SPOOL, ROLL, TEMP, PRIVATE, CSS.

  Looks like disks or accounts for certain files (ROLL=swap).


MTM ACTUTY commands:

    (ACTUTY.TSK hexdump record 3)

- ACCOUNTS  [maxnum]
- ADD       act,grp,pass,name,*,*,priv
- CHANGE    act,[grp],[pass],[name],,,[priv]
- PRIVILEGE [act[,priv]]
- DELETE    act
- LIST      [act]
- MODE      [CREATE|UPDATE|REPORT]
- TOTAL                           (in MODE REPORT only)
- PAUSE                           (type CONT to return)
- END


LIBLDR commands:

    (LIBLDR.TSK hexdump records 30-31)

  AM, BC, BF, BI, BR, CO, DU, ED, EN, FF, FI, FR, GO, LA, LC,
  LF, LG, LI, LO, MA, OU, PA, PB, RO, RW, TA, TO, WF, XO


MLU32 commands:

  GET fd               e.g. GET mtmstruc.mlb
  DIRECTORY            list entries
  LIST [fd] [,entry]   e.g. SAVE priv.mac,$PRIV - default fd is CON:
  INCLUDE fd
  DELETE entry         entries are case sensitive
  ESTABLISH fd         e.g. ESTABLISH fred.mlb
  PAUSE
  ABEND
  SAVE *               save
  SNAP
  BF/FF/REW/RW/WFM     tape commands


BREAK :

- Hit telnet escape char, Ctrl/]
- Type SEND BRK.
- Wait for asterisk prompt.
- Type CANCEL.


SIGNON :

- SIGNON name,account,password.
- Ctrl/E before password disables echoing during password.
- Or type SIGNON without parameters for dialog version.

  - USERID is a unique session name (your alias).
  - ACCOUNT is the numeric account. Who you *really* are.
  - PASSWORD is your password.
  - ENVIRONMENT is the name of a CSS to run instead of USERINIT.

- SIGNON without parameters does not echo USERID or PASSWORD.


MTM privileges :

  (Referred to in literature.)

- SET GROUP
- SET PRIVATE
- EXTENDED ACCOUNT ACCESS
- PRIVILEGED

  (Trial and error, using MTM PRIVILEGE command)

- 0000 0000  no privileges             -- bog standard user
- 0000 F...  can run private CSS       -- good for isolated developer
- 0000 .F.,  SET PRIVATE and SET GROUP -- can do damage (SET PRIVATE 0)
- 0000 ..F.
- 0000 ...F
- F... ....
- .F.. ....
- ..F. ....
- ...F ....  EXTENDED ACCOUNT ACCESS   --
- FFFF FFFF  everything?

  The useful ones seem to be:

  0      bog standard user, can write code, but not own CSS
  f000   isolated developer limited to private account, with CSS
  ff00   system programmer with SET PRIVATE and SET GROUP privilege, risky
  fff0   more privileges? not recommended

  Also note left nybble:

  0ff00  isolated developer as above, cannot edit /S files, but can SET
         PRIVATE and then edit them as if private (like sudo)
  fff00  EXTENDED ACCOUNT ACCESS. Tasks can fopen "inform.css/17" direct,
         if linked with OPTION ACP. MTM has to use SET PRIVATE or SET
         GROUP for that, but EDIT/32 can save /S files directly.
  ff000  EXTENDED ACCOUNT ACCESS without SET PRIVATE

- Note: On programs with extended account access, see C manual p. A-3,
  but don't mess with fsacp global. Program must be linked with OPTION ACP
  in the link control file (.LNK file). An ACP enabled program can open
  a file with a numeric file class, e.g. "inform.css/17", if the user has
  extended account access privilege.

- MTMSTRUC.MLB

  PRV.ELOM EQU PRV.COMM!PRV.CONM!PRV.ETLM
  PRV.ACTB EQU 8                   ALLOW ACCT# FOR ASSIGN,REN,CSS,LOAD
  PRV.ACPM EQU Y'00080000'
  PRV.OPTM EQU Y'0000000E'         MASK OF THESE ACROSS A HWD
  PRV.CSSB EQU 18                  ALLOW PRIVATE CSS CALLS
  PRV.PRIB EQU 21                  ALLOW PRIOR 1-11 FROM PRIVATE CSS
  PRV.PRVM EQU Y'00000100'         (SET PR/GR;SEE ALL BATCH;+MORE)
  PRV.SMNB EQU 26                  PE MUNICH EXCLUSIVE
  PRV.255M EQU Y'FFFFFFFF'         ACCOUNT 255 PRIVILEGES

- Which bits mean what? According to MTMSTRUC.MLB

  *load mlu32
  *start
  MLU >list con:,$PRIV:
           MACRO
           $PRIV
  PRV.COMB EQU   0                   (ALLOW) SVC 6 COMMS
  PRV.COMM EQU   Y'80000000'
  PRV.ETLB EQU   4                   (ALLOW) LOAD ETASKS
  PRV.ETLM EQU   Y'08000000'
  PRV.CONB EQU   5                   (ALLOW) SVC 6 CONTROL
  PRV.CONM EQU   Y'04000000'
  PRV.ELOM EQU   PRV.COMM!PRV.CONM!PRV.ETLM
  PRV.TIPB EQU   6                   PE MUNICH EXCLUSIVE
  PRV.TIPM EQU   Y'02000000'
  PRV.DLNB EQU   7                   PE MUNICH EXCLUSIVE
  PRV.DLNM EQU   Y'01000000'
  PRV.ACTB EQU   8                   ALLOW ACCT# FOR ASSIGN,REN,CSS,LOAD
  PRV.ACTM EQU   Y'00800000'
  PRV.GRPB EQU   9                   ALLOW SET GROUP COMMAND
  PRV.GRPM EQU   Y'00400000'
           SPACE
  PRV.ACPB EQU   12                  ALLOW ACCT PRIVS TO RUN
  PRV.ACPM EQU   Y'00080000'
  PRV.BARB EQU   13                  ALLOW BARE DISC ACCESS PRIVS
  PRV.BARM EQU   Y'00040000'
  PRV.UNVB EQU   14                  ALLOW TO BE UNIVERSAL COMMS
  PRV.UNVM EQU   Y'00020000'
  PRV.OPTM EQU   Y'0000000E'         MASK OF THESE ACROSS A HWD
           SPACE
  PRV.ENVB EQU   16                  ALLOW "ENV=" IN SIGNON
  PRV.ENVM EQU   Y'00008000'
  PRV.DFSB EQU   17                  ALLOW SEE &.. AND @.. FILENAMES
  PRV.DFSM EQU   Y'00004000'
  PRV.CSSB EQU   18                  ALLOW PRIVATE CSS CALLS
  PRV.CSSM EQU   Y'00002000'
  PRV.PWDB EQU   19                  ALLOW CHANGE PASSWORD
  PRV.PWDM EQU   Y'00001000'
           SPACE
  PRV.RENB EQU   20                  ALLOW RENAME TO /G, /S
  PRV.RENM EQU   Y'00000800'
  PRV.PRIB EQU   21                  ALLOW PRIOR 1-11 FROM PRIVATE CSS
  PRV.PRIM EQU   Y'00000400'
  PRV.BPRB EQU   22                  ALLOW BATCH PRIO=INTERACTIVE PRIO
  PRV.BPRM EQU   Y'00000200'
  PRV.PRVB EQU   23                  ALLOW PRIVILEGED USER
  PRV.PRVM EQU   Y'00000100'         (SET PR/GR;SEE ALL BATCH;+MORE)
           SPACE
  PRV.FGRB EQU   24                  ALLOW USE OF GENERAL $FGRND INTERF
  PRV.FGRM EQU   Y'00000080'
  PRV.HSPB EQU   25                  ALLOW $HASP INTERFACE
  PRV.HSPM EQU   Y'00000040'
  PRV.SMNB EQU   26                  PE MUNICH EXCLUSIVE
  PRV.SMNM EQU   Y'00000020'
  PRV.RMTB EQU   27                  PE MUNICH EXCLUSIVE
  PRV.RMTM EQU   Y'00000010'
           SPACE 2
  PRV.ACLM EQU   Y'0000000F'         MASK FOR ACCTG USER CLASS
  PRV.255M EQU   Y'FFFFFFFF'         ACCOUNT 255 PRIVILEGES
           MEND
  MLU >list priv.mac,$PRIV
  1 MACRO LISTED TO NEW FILE SYS:PRIV.MAC
  MLU >end

  Can SET PRIVATE and SET GROUP be decoupled? Maybe!

  0x00000100  SET GR/PR  (SET PRIVATE with implied SET GROUP)
  0x00400000  SET GROUP  (SET GROUP only)


LINK options:

  (From linker produced map file.)

  UTASK             user task (default)
  ETASK             executive task
  N/ACCOUNTING      disable accounting
  N/ACPRIVILEGE     extended account privilege
  N/AFPAUSE
  N/APCONTROL
  N/APMAPPING
  N/APUONLY         auxiliary processing unit
  N/COMMUNICATE
  N/CONTROL
  N/DFLOAT          double precision floating point
  N/DISC
  N/DTABLES
  N/FLOAT           floating point
  N/INTERCEPT       SVC intercepts
  N/KEYCHECK
  N/RESIDENT        stays in memory
  N/ROLL            swappable
  N/SEGMENTED       using overlays?
  N/SVCPAUSE        disable SVC pausing
  N/UNIVERSAL       3200 series
  N/VFC
  N/XSVC1

  See also CLU.TSK (Compatible Link Utility), which has built-in help;
  and PATH.TSK, which also has help. Both programs are mentioned in
  Don Stalkowski's write-up.


CAL and MACRO:

- CAL allows lowercase, but MACRO seems to be case sensitive, so probably
  best to stick to upppercase (standard convention).

- Labels and names must start in column zero, "commands" must NOT start in
  column zero (must be preceded by at least one space).

- Column 72 is continuation char.


FORTRAN VII:

- Lowercase is fine.

- END IF is supported, as per FORTRAN 77.

- END DO is not, so labeled DOs are still a thing.

- IMPLICIT NONE is available, but no start option to make it the default.

- There is a $INCLUDE directive.

- Semicolon starts an end-of-line comment.

- The default destination for PRINT and WRITE is LU 3.

  WRITE *, 'Hello world'
  PRINT *, 'Hello world'

  By default these will (eventually) show up on the printer, but you can
  also redirect LU3 to your terminal with an ASSIGN command:

  LOAD prog
  ASSIGN 3,CON:
  START

- The TYPE statement goes to LU 5, which defaults to the terminal:

  TYPE *, 'Hello world'

  You can ASSIGN 5 to a file, but lines will be indented by a single space
  (i.e. Fortran carriage control, like a printer).

- FORTRAN makes much use of logical unit numbers for general I/O, so it so
  it is a good idea to use an ancilliary .ASN file to ASSIGN any LUs your
  program will be needing.  The EXEC command runs this file, if it exists,
  before it starts your program.

  BUILD prog.ASN
  ASSIGN 0,inputs.csv
  ASSIGN 1,output.txt
  ASSIGN 3,CON:
  ASSIGN 6,PR:
  $EXIT
  ENDB

- UFLS.M95 (on Universal Fortran tape, Fortran VII Z) Appendix D "Usage
  and Description of DEBUG/32" refers to "compiler options" DEBUG and
  NDEBUG.

- Start options are:

  BABORT
  BASE
  CAL
  CONTIN
  DICT
  ELIST
  HOLL
  INLIB
  LABEL
  LCNT
  N/ALST
  N/APU
  N/BATCH
  N/COMP
  N/DEBUG
  N/INLINE
  N/LIST
  N/OPTIMIZE
  N/TRACE
  N/XREF
  NELIST
  NMAP
  NRXT
  NTEST
  NWARN
  SYNTAX
  TCOM
  TEST
  XMAP

  Some of these can also be specified in FORTRAN file with $ in column
  zero, e.g. $BATCH, $DEBUG. But there is no option to forbid implicit
  typing to check that you haven't forgotten to use IMPLICIT NONE.

- See IUG-214 MULTI FILE SEARCH for example of inline assembly. (Also
  "FORTRAN V Level 2 Compiler Functional Spec" section 5.3.2.5b. Inline
  assembly goes between $ASSM and $FORT.)

- IUG-214 also has a wildcard matcher / directory reader without using CSS.


FASTCHEK strings, possible start options?

- CHECK
- CLOSE
- CLOSEONLY
- COMMAND
- DIRECTORY
- END
- EXTENDALLOWED
- FILL
- INITIALISE/INITIALIZE
- KEEPSPOOL
- LIST
- NO
- NOREADCHECK
- NOWRITERECOVERY
- READCHECK
- RENAME
- REPORTONLY
- TBLOCKS
- VOLUME
- WRITERECOVERY
- YES


Some preinstalled programs :

- ECM: Environment Control Manager
- VCF: Virtual Console Faciltiy
- FXH: Series 7000/3200 File Transfer Handler
- IPCARCH: IPC Archive Utility


Problems :

- MTM seems to do a lot of "busy work". CPU usage can get quite high
  after a while.

