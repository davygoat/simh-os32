#
# shadow.config
#
namespace eval config {

   #
   # Uncomment if you want to run ftpd on the assigned port number. This
   # should work  well in docker, especially  if you also run  telnet on
   # the port 23.
   #
   #set port 21

   #
   # Let's  say you  have a  raspberry or  a beaglebone  on a  static IP
   # address. Let's assume that you want  to ftp to OS/32 from Linux box
   # and a laptop, each one having its own IP address.
   #
   #set     host    192.168.1.10
   #lappend allowip 192.168.1.2
   #lappend allowip 192.168.1.3

   #
   # To create a named user who defaults to the 25 account, but can also
   # get into other accounts, use an asterisk to give them that extended
   # access. You can also remove  dangerous commands by adding something
   # like -DELE to the list.
   #
   # By default, you'll  use MTM for authentication, which  is neat, but
   # takes a  few seconds. Or you  can use a separate  password for FTP,
   # which has the  advantage of being hashed (OS/32  is cleartext), and
   # it's also faster than doing an  MTM signon. Your password should be
   # salted and hashed with something like this:
   #
   #     echo "david/needle nardle noo!" | md5sum
   #
   #set access(david) { 25 * }
   #set passwords(david) 78acfd6de*************378276a3e6

   #
   # Here's how to get readonly anonymous ftp with a blank password.
   #
   # echo "anonymous/" | md5sum
   #
   #set access(anonymous) { 99 RO }
   #set passwords(anonymous) 51dde3a631b82a549ff793f540f65e6e

   #
   # What if your anonymous user has readonly access, but you DO want to
   # let them upload files? Easy, add  back the STOR command with a plus
   # sign (+STOR). Also note the -vt, more about that later.
   #
   #set access(anonymous) { 99 RO +STOR -vt }

   #
   # You might want  to disable numeric logins because  they're too easy
   # to enumerate. Plus, names are so much easier to remember.
   #
   #set numericlogins 0

   #
   # To colour error messages according  to their error number, just add
   # your own VT100 sequences. For example, show success (200 series) in
   # green,  errors  (500 series)  in  red,  and temporary  errors  (400
   # series) in  yellow. The following  example also gives  the "Whoops,
   # file got stuck" message a yellow  highlighter.
   #
   #array set vt100 {
   #   welcome "\x1b\[34;1m\x1b#6"
   #   2xx     "\x1b\[32m"
   #   4xx     "\x1b\[33;1m"
   #   451     "\x1b\[33;1;7m"
   #   5xx     "\x1b\[31;1m"
   #}
   #
   # You  can do  all sorts  if you  want, within  reason. Wrapping  the
   # welcome message in double wide  blue (<ESC>#6<ESC>[34m) is a little
   # bit over the top, but not as extreme as the old <ESC>[5m.
   #
   #set welcome "$vt100(welcome)$welcome$vt100(normal)"
   #
   # The "anonymous" example above also  includes the -vt option in case
   # VT100 sequences create problems for anyone's FTP client.

   #
   # Once  you're happy  that  your configuration  is working,  consider
   # disabling  debugconfig,   because  it  shows  the   hashes  to  any
   # lookenpeepers.  When  you  are   ready,  just  uncomment  the  next
   # statement to stop displaying the configuration.
   #
   #set debugconfig 0
}
