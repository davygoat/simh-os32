# vim:set nowrap:
# vim:set syntax=sh:

   set console log=logs/%0.log

:init

   echo
   echo
   echo
   echo
   echo ************* STAGE 7 - COMPILE-AND-GO SCRIPTS *************
   echo
   echo
   echo

   set cpu 832
   set cpu idle
   set throttle 25000/1

   set ttp enabled
   set pas devno=20
   attach pas 1026

   # disks
   attach -e dm0 os32.dsk

   attach lpt printer.out
   deposit 7c 002

:ok-here-we-go

   set env DATE=%DATE_MM%/%DATE_DD%/%DATE_YY%
   set env TIME=%TIME_HH%:%TIME_MM%

   noexpect
   expect "ENTER DATE AND TIME\r\n*" send "set time %DATE%,%TIME%\r";c
   expect "*" send AFTER=100000 "mark dsc4:,on\r";c
   expect "NOFF-ERR  POS=on\r\n*"; goto fastchek-needed
   expect "DSC4:  SYS\r\n*" noexpect "NOFF-ERR  POS=on\r\n*" ; send "volume sys/temp\r";c

   # COGOLINK.CSS
   expect "\r\n*" send "alloc cogolink.css,in,80 ; build cogolink.css,append\r";c
   expect ".CMDP>" send "mtmonly\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @=/AM/\r";c
   expect ".CMDP>" send "     $goto admod\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Max 10 positional parameters.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @11\r";c
   expect ".CMDP>" send "     $write TOO MANY FILES ON COMMAND LINE, MAX 10.\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Require at least one.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnull @1\r";c
   expect ".CMDP>" send "     $write MISSING FILENAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $local @NAME(11)  ; $set @NAME   = @1\r";c
   expect ".CMDP>" send "  $local @EXT(3)    ; $set @EXT    = OBJ\r";c
   expect ".CMDP>" send "  $local @SEGINC(5) ; $set @SEGINC = 20\r";c
   expect ".CMDP>" send "  $local @LNK(15)   ; $set @LNK    = @NAME.LNK\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifextension @1\r";c
   expect ".CMDP>" send "     $define 1,NAM,filename(@1)\r";c
   expect ".CMDP>" send "     $define 2,EXT,extension(@1)\r";c
   expect ".CMDP>" send "     $if ch @*/EXT/ eq \".LNK\"\r";c
   expect ".CMDP>" send "        $ifnx @1\r";c
   expect ".CMDP>" send "           $write FILE NOT FOUND: @1\r";c
   expect ".CMDP>" send "           $clear\r";c
   expect ".CMDP>" send "        $endc\r";c
   expect ".CMDP>" send "        $set @LNK  = @NAME\r";c
   expect ".CMDP>" send "        $set @NAME = @*/NAM/\r";c
   expect ".CMDP>" send "     $else\r";c
   expect ".CMDP>" send "        $write NON .LNK EXTENSION NOT ALLOWED: @1\r";c
   expect ".CMDP>" send "        $clear\r";c
   expect ".CMDP>" send "     $endc\r";c
   expect ".CMDP>" send "     $release ivar, 1\r";c
   expect ".CMDP>" send "     $release ivar, 2\r";c
   expect ".CMDP>" send "  $else\r";c
   expect ".CMDP>" send "     $ifnx @NAME.@EXT\r";c
   expect ".CMDP>" send "        $write FILE NOT FOUND: @NAME.@EXT\r";c
   expect ".CMDP>" send "        $clear\r";c
   expect ".CMDP>" send "     $endc\r";c
   expect ".CMDP>" send "     $ifnnull @@=/LNK/@=/LNK/\r";c
   expect ".CMDP>" send "        $set @LNK = @@=/LNK/@=/LNK/\r";c
   expect ".CMDP>" send "     $endc\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Option to ask for extra memory. Unlikely to need this.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @=/SEGINC/\r";c
   expect ".CMDP>" send "     $set @SEGINC = @=/SEGINC/\r";c
   expect ".CMDP>" send "  $end\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Build LNK file, or use existing one if .LNK extension on line\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifext @1\r";c
   expect ".CMDP>" send "     * Use existing\r";c
   expect ".CMDP>" send "  $else\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "     * Start the linker file.\r";c
   expect ".CMDP>" send "     xdelete @LNK\r";c
   expect ".CMDP>" send "     $build @LNK\r";c
   expect ".CMDP>" send "        establish task\r";c
   expect ".CMDP>" send "        option sys=x10000,work=(x1000,xFFFF)\r";c
   expect ".CMDP>" send "        option float,dfloat,roll,nafp,nkey\r";c
   expect ".CMDP>" send "     $endb\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "     * Insert additional files, max 10 in total.\r";c
   expect ".CMDP>" send "     $ifnnull @1  ; @0 @LNK,@1,am=1  ; $endc\r";c
   expect ".CMDP>" send "     $ifnnull @2  ; @0 @LNK,@2,am=1  ; $endc\r";c
   expect ".CMDP>" send "     $ifnnull @3  ; @0 @LNK,@3,am=1  ; $endc\r";c
   expect ".CMDP>" send "     $ifnnull @4  ; @0 @LNK,@4,am=1  ; $endc\r";c
   expect ".CMDP>" send "     $ifnnull @5  ; @0 @LNK,@5,am=1  ; $endc\r";c
   expect ".CMDP>" send "     $ifnnull @6  ; @0 @LNK,@6,am=1  ; $endc\r";c
   expect ".CMDP>" send "     $ifnnull @7  ; @0 @LNK,@7,am=1  ; $endc\r";c
   expect ".CMDP>" send "     $ifnnull @8  ; @0 @LNK,@8,am=1  ; $endc\r";c
   expect ".CMDP>" send "     $ifnnull @9  ; @0 @LNK,@9,am=1  ; $endc\r";c
   expect ".CMDP>" send "     $ifnnull @10 ; @0 @LNK,@10,am=1 ; $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "     * Ratfor libraries if requested\r";c
   expect ".CMDP>" send "     $ifnnull @@@=/RAT/@@=/RAT/@=/RAT/\r";c
   expect ".CMDP>" send "        $build @LNK,append\r";c
   expect ".CMDP>" send "        library sys:mylibi2.obj/s\r";c
   expect ".CMDP>" send "        library sys:conlibi2.obj/s\r";c
   expect ".CMDP>" send "        library sys:stlib1i2.obj/s\r";c
   expect ".CMDP>" send "        library sys:dsi2.obj/s\r";c
   expect ".CMDP>" send "        library sys:stlib2i2.obj/s\r";c
   expect ".CMDP>" send "        library sys:stlib3i2.obj/s\r";c
   expect ".CMDP>" send "        $endb\r";c
   expect ".CMDP>" send "     $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "     * Fortran libraries if requested\r";c
   expect ".CMDP>" send "     $ifnnull @@@=/FOR/@@=/FOR/@=/FOR/@@@=/RAT/@@=/RAT/@=/RAT/\r";c
   expect ".CMDP>" send "        $build @LNK,append\r";c
   expect ".CMDP>" send "        library sys:f7rtl51.obj/s\r";c
   expect ".CMDP>" send "        library sys:pem51.obj/s\r";c
   expect ".CMDP>" send "        $endb\r";c
   expect ".CMDP>" send "     $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "     * Pascal libraries if requested\r";c
   expect ".CMDP>" send "     $ifnnull @@@=/PAS/@@=/PAS/@=/PAS/\r";c
   expect ".CMDP>" send "        $build @LNK,append\r";c
   expect ".CMDP>" send "        library sys:pasrtl.obj/s\r";c
   expect ".CMDP>" send "        $endb\r";c
   expect ".CMDP>" send "     $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "     * C libraries if requested\r";c
   expect ".CMDP>" send "     $ifnnull @@@=/CC/@@=/CC/@=/CC/\r";c
   expect ".CMDP>" send "       $ifnnull @@@=/FOR/@@=/FOR/@=/FOR/\r";c
   expect ".CMDP>" send "        $build @lnk,append\r";c
   expect ".CMDP>" send "        include sys:cfinit.obj/s\r";c
   expect ".CMDP>" send "        $endb\r";c
   expect ".CMDP>" send "       $else\r";c
   expect ".CMDP>" send "        $build @lnk,append\r";c
   expect ".CMDP>" send "        include sys:cinit.obj/s\r";c
   expect ".CMDP>" send "        $endb\r";c
   expect ".CMDP>" send "       $endc\r";c
   expect ".CMDP>" send "       $build @lnk,append\r";c
   expect ".CMDP>" send "        library sys:libu.obj/s\r";c
   expect ".CMDP>" send "        library sys:libw.obj/s\r";c
   expect ".CMDP>" send "        library sys:libe.obj/s\r";c
   expect ".CMDP>" send "        library sys:pemath.obj/s\r";c
   expect ".CMDP>" send "       $endb\r";c
   expect ".CMDP>" send "     $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "     * Finish the linker file\r";c
   expect ".CMDP>" send "     $build @LNK,append\r";c
   expect ".CMDP>" send "        build @NAME.TSK\r";c
   expect ".CMDP>" send "        end\r";c
   expect ".CMDP>" send "     $endb\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  prevent etm\r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "     $build @NAME.tmp\r";c
   expect ".CMDP>" send "        option noterm,nopsfm\r";c
   expect ".CMDP>" send "        copy @LNK,con:\r";c
   expect ".CMDP>" send "        end\r";c
   expect ".CMDP>" send "     $endb\r";c
   expect ".CMDP>" send "     load copy32\r";c
   expect ".CMDP>" send "     start ,com=@NAME.tmp,lis=con:\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send "  xdelete @NAME.tmp\r";c
   expect ".CMDP>" send "  enable etm\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Start the linker\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "     load link,@SEGINC\r";c
   expect ".CMDP>" send "     start ,com=@LNK,LOG=null:\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "     xdelete @NAME.TSK\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send "  $ifnx @1\r";c
   expect ".CMDP>" send "     $ifnull @@=/LNK/@=/LNK/\r";c
   expect ".CMDP>" send "        delete @LNK\r";c
   expect ".CMDP>" send "     $endc\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* For C, also create a CSS file, like ln does\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$ifnnull @@@=/CC/@@=/CC/@=/CC/\r";c
   expect ".CMDP>" send "$ifnx @NAME.css\r";c
   expect ".CMDP>" send "alloc @NAME.css,in,80\r";c
   expect ".CMDP>" send "$build @NAME.css,append\r";c
   expect ".CMDP>" send "load @NAME,@SEGINC\r";c
   expect ".CMDP>" send "%%%%..%%start ,@.1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "$endb\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Done\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $exit\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label USAGE\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $write USAGE: @0 filename [,filename]... [,SEGINC=n] [,PAS=1]\r";c
   expect ".CMDP>" send "  $clear\r";c
   expect ".CMDP>" send "  $exit\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "*************************************************************************\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label ADMOD\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Check if the /LIBRARY switch was used. If so, treat it as a library.\r";c
   expect ".CMDP>" send "* Many libraries have a .OBJ extension just to confuse things.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $define 2, NAME, uppercase(@2)\r";c
   expect ".CMDP>" send "  $define 5, POS,  position('#',/L#,@*/NAME/#)\r";c
   expect ".CMDP>" send "  $ifnnull @*/POS/\r";c
   expect ".CMDP>" send "     $define 5, POS,  dc(@*/POS/-1)\r";c
   expect ".CMDP>" send "     $define 2, NAME, substring('#',@*/NAME/#,1,@*/POS/)\r";c
   expect ".CMDP>" send "     $define 6, CMD,  string(library)\r";c
   expect ".CMDP>" send "     $goto ADDIT\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Check if the /OBJECT switch was given. If so, then treat it as an object\r";c
   expect ".CMDP>" send "* unless a .LIB extension says otherwise.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $define 2, NAME, uppercase(@2)\r";c
   expect ".CMDP>" send "  $define 5, POS,  position('#',/O#,@*/NAME/#)\r";c
   expect ".CMDP>" send "  $ifnnull @*/POS/\r";c
   expect ".CMDP>" send "     $define 5, POS,  dc(@*/POS/-1)\r";c
   expect ".CMDP>" send "     $define 2, NAME, substring('#',@*/NAME/#,1,@*/POS/)\r";c
   expect ".CMDP>" send "     $define 5, POS,  position('#',/O#,@*/NAME/#)\r";c
   expect ".CMDP>" send "     $ifnnull @*/POS/\r";c
   expect ".CMDP>" send "        $def 5, POS,  dc(@*/POS/-1)\r";c
   expect ".CMDP>" send "        $def 2, NAME, substring('#',@*/NAME/#,1,@*/POS/)\r";c
   expect ".CMDP>" send "        $def 6, CMD,  string(include)\r";c
   expect ".CMDP>" send "        $goto ADDIT\r";c
   expect ".CMDP>" send "     $endc\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $define 3, EXT, extension(@*/NAME/)\r";c
   expect ".CMDP>" send "  $if ch \"@*/EXT/\" eq .LIB\r";c
   expect ".CMDP>" send "     $define 6, CMD, string(library)\r";c
   expect ".CMDP>" send "  $else\r";c
   expect ".CMDP>" send "     $define 6, CMD, string(include)\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label ADDIT\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $define 1, VOL,  volume(@*/NAME/)\r";c
   expect ".CMDP>" send "  $define 3, EXT,  extension(@*/NAME/) ld0 string(.OBJ)\r";c
   expect ".CMDP>" send "  $define 4, ACT,  account(@*/NAME/)\r";c
   expect ".CMDP>" send "  $define 2, NAME, filename(@*/NAME/)\r";c
   expect ".CMDP>" send "  $define 2, NAME, string(@*/VOL/@*/NAME/@*/EXT/@*/ACT/)\r";c
   expect ".CMDP>" send "  $ifnx @*/NAME/\r";c
   expect ".CMDP>" send "     $write FILE NOT FOUND: @*/NAME/\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send "  $build @1,append\r";c
   expect ".CMDP>" send "        @*/CMD/ @*/NAME/\r";c
   expect ".CMDP>" send "  $endb\r";c
   expect ".CMDP>" send "  $exit\r";c
   expect ".CMDP>" send "endb\r";c

   # FORC.CSS
   expect "\r\n*" send "alloc forc.css,in,80 ; build forc.css,append\r";c
   expect ".CMDP>" send "mtmonly\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* We could do more than ten arguments, but the MTM command line limits us\r";c
   expect ".CMDP>" send "* to 80 characters. Things go awry when the command line overruns.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @11\r";c
   expect ".CMDP>" send "     $write TOO MANY FILES ON COMMAND LINE, MAX 10.\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Require at least one positional parameter: filename without extension.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnull @1\r";c
   expect ".CMDP>" send "     $write MISSING FILENAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $local @NAME(10)  ; $set @NAME   = @1\r";c
   expect ".CMDP>" send "  $local @EXT(3)    ; $set @EXT    = FTN\r";c
   expect ".CMDP>" send "  $local @SEGINC(5) ; $set @SEGINC = 20\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifextension @NAME\r";c
   expect ".CMDP>" send "     $write EXTENSION NOT ALLOWED: @NAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnx @NAME.@EXT\r";c
   expect ".CMDP>" send "     $write FILE NOT FOUND: @NAME.@EXT\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Check if we want extra memory (seginc=n on the command line).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @=/SEGINC/\r";c
   expect ".CMDP>" send "     $set @SEGINC = @=/SEGINC/\r";c
   expect ".CMDP>" send "  $end\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Quiet compile: output to filename.err rather than printer or console.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  xdelete @NAME.obj,@NAME.err\r";c
   expect ".CMDP>" send "  allocate @NAME.obj,index,126\r";c
   expect ".CMDP>" send "  allocate @NAME.err,index,80\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "     load f7d51,@SEGINC\r";c
   expect ".CMDP>" send "     assign 1,@NAME.@EXT,sro\r";c
   expect ".CMDP>" send "     assign 2,@NAME.obj\r";c
   expect ".CMDP>" send "     assign 3,@NAME.err\r";c
   expect ".CMDP>" send "     start\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* If the compilation errored, show filename.err, delete any object file,\r";c
   expect ".CMDP>" send "* and bail out. Otherwise, remove the error file, and move on. Unfortunate\r";c
   expect ".CMDP>" send "* that COPY/32 clobbers (zeros) the compiler end task status, and SET\r";c
   expect ".CMDP>" send "* CODE seems not to update current(eot). So we will echo the compiler EOT\r";c
   expect ".CMDP>" send "* to avoid giving a false impression that everything went smoothly.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "     $define 1,EOT,current(eot)\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     prevent etm\r";c
   expect ".CMDP>" send "     $job\r";c
   expect ".CMDP>" send "        $build @NAME.tmp\r";c
   expect ".CMDP>" send "           option noterm,nopsfm\r";c
   expect ".CMDP>" send "           copy @NAME.err,con:\r";c
   expect ".CMDP>" send "           end\r";c
   expect ".CMDP>" send "        $endb\r";c
   expect ".CMDP>" send "        load copy32\r";c
   expect ".CMDP>" send "        start ,com=@NAME.tmp,lis=con:\r";c
   expect ".CMDP>" send "     $termjob\r";c
   expect ".CMDP>" send "     enable etm\r";c
   expect ".CMDP>" send "     xdelete @NAME.obj,@NAME.tmp\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     $write ***    FORTRAN    END OF TASK CODE @*/EOT/     ***\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  delete @NAME.err\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Process any additional parameters, up to ten of them. We use recursion\r";c
   expect ".CMDP>" send "* here but only one parameter and one level, so no real risk of running\r";c
   expect ".CMDP>" send "* into the CSS nesting limit (which is eight max).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @2  ; @0 @2, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @3  ; @0 @3, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @4  ; @0 @4, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @5  ; @0 @5, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @6  ; @0 @6, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @7  ; @0 @7, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @8  ; @0 @8, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @9  ; @0 @9, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @10 ; @0 @10,seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $exit\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label USAGE\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $write USAGE: @0 filename [,filename]... [,SEGINC=n]\r";c
   expect ".CMDP>" send "  $clear\r";c
   expect ".CMDP>" send "endb\r";c
   # FORL.CSS
   expect "\r\n*" send "alloc forl.css,in,80 ; build forl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,for=1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # FORCL.CSS
   expect "\r\n*" send "alloc forcl.css,in,80 ; build forcl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "forc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,for=1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # FORCLG.CSS
   expect "\r\n*" send "alloc forclg.css,in,80 ; build forclg.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "forc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,for=1\r";c
   expect ".CMDP>" send "forgo @1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # FORGO.CSS
   expect "\r\n*" send "alloc forgo.css,in,80 ; build forgo.css,append\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w . USAGE: @0 fnam [,[LU0],[LU1],[LU2],[LU3],[LU4],[LU4]]\r";c
   expect ".CMDP>" send "   $w .                   [,SEGINC=n]\r";c
   expect ".CMDP>" send "   $w .                   [,WRITE=outfd]\r";c
   expect ".CMDP>" send "   $w .                   [,TYPE=outfd]\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w . NOTE: WRITE* GOES TO LU3, TYPE* GOES TO LU5.\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifnx @1.tsk\r";c
   expect ".CMDP>" send "   $write FILE NOT FOUND: @1.TSK\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$def 2, LU0,                                        st(@2) ld0 st()\r";c
   expect ".CMDP>" send "$def 3, LU1,                                        st(@3) ld0 st()\r";c
   expect ".CMDP>" send "$def 4, LU2,                                        st(@4) ld0 st()\r";c
   expect ".CMDP>" send "$def 5, WRITE, st(@@=/WRITE/) ld0 st(@=/WRITE/) ld0 st(@5) ld0 st(con:)\r";c
   expect ".CMDP>" send "$def 6, LU4,                                        st(@6) ld0 st()\r";c
   expect ".CMDP>" send "$def 7, TYPE,  st(@@=/TYPE/)  ld0 st(@=/TYPE/)  ld0 st(@7) ld0 st(con:)\r";c
   expect ".CMDP>" send "$def 8, SEG,   st(@@=/SEGINC/) ld0 st(@=/SEGINC/) ld0 st(5)\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "prevent etm\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   load @1.tsk,@*/SEG/\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write LOAD @1.tsk,@*/SEG/ FAILED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   $ifx @1.asn\r";c
   expect ".CMDP>" send "      @1.asn\r";c
   expect ".CMDP>" send "   $else\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU0/   ; assign 0,@*/LU0/   ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU1/   ; assign 1,@*/LU1/   ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU2/   ; assign 2,@*/LU2/   ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/WRITE/ ; assign 3,@*/WRITE/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU4/   ; assign 4,@*/LU4/   ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/TYPE/  ; assign 5,@*/TYPE/  ; $endc\r";c
   expect ".CMDP>" send "   $endc\r";c
   expect ".CMDP>" send "   display lu\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $w PROBLEMS WITH ASSIGNMENTS\r";c
   expect ".CMDP>" send "   cancel\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   start\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write @1.tsk WENT WRONG\r";c
   expect ".CMDP>" send "   $clear\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "enable etm\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "endb\r";c

   # PASC.CSS
   expect "\r\n*" send "alloc pasc.css,in,80 ; build pasc.css,append\r";c
   expect ".CMDP>" send "mtmonly\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* We could do more than ten arguments, but the MTM command line limits us\r";c
   expect ".CMDP>" send "* to 80 characters. Things go awry when the command line overruns.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @11\r";c
   expect ".CMDP>" send "     $write TOO MANY FILES ON COMMAND LINE, MAX 10.\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Require at least one positional parameter: filename without extension.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnull @1\r";c
   expect ".CMDP>" send "     $write MISSING FILENAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $local @NAME(10)  ; $set @NAME   = @1\r";c
   expect ".CMDP>" send "  $local @EXT(3)    ; $set @EXT    = PAS\r";c
   expect ".CMDP>" send "  $local @SEGINC(5) ; $set @SEGINC = 64\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifextension @NAME\r";c
   expect ".CMDP>" send "     $write EXTENSION NOT ALLOWED: @NAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnx @NAME.@EXT\r";c
   expect ".CMDP>" send "     $write FILE NOT FOUND: @NAME.@EXT\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Check if we want extra memory (seginc=n on the command line).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @=/SEGINC/\r";c
   expect ".CMDP>" send "     $set @SEGINC = @=/SEGINC/\r";c
   expect ".CMDP>" send "  $end\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Quiet compile: output to filename.err rather than printer or console.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  xdelete @NAME.obj,@NAME.err\r";c
   expect ".CMDP>" send "  allocate @NAME.obj,index,126\r";c
   expect ".CMDP>" send "  allocate @NAME.err,index,80\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "     load pascal,@SEGINC\r";c
   expect ".CMDP>" send "     assign   0,con:\r";c
   expect ".CMDP>" send "     assign   1,@NAME.@EXT,sro\r";c
   expect ".CMDP>" send "     assign   7,@NAME.obj\r";c
   expect ".CMDP>" send "     assign   2,@NAME.err\r";c
   expect ".CMDP>" send "     assign   6,null:\r";c
   expect ".CMDP>" send "     tempfile 3,in,512\r";c
   expect ".CMDP>" send "     tempfile 4,in,512\r";c
   expect ".CMDP>" send "     start\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* If the compilation errored, show filename.err, delete any object file,\r";c
   expect ".CMDP>" send "* and bail out. Otherwise, remove the error file, and move on. Unfortunate\r";c
   expect ".CMDP>" send "* that COPY/32 clobbers (zeros) the compiler end task status, and SET\r";c
   expect ".CMDP>" send "* CODE seems not to update current(eot). So we will echo the compiler EOT\r";c
   expect ".CMDP>" send "* to avoid giving a false impression that everything went smoothly.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "     $define 1,EOT,current(eot)\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     prevent etm\r";c
   expect ".CMDP>" send "     $job\r";c
   expect ".CMDP>" send "        $build @NAME.tmp\r";c
   expect ".CMDP>" send "           option noterm,nopsfm\r";c
   expect ".CMDP>" send "           copy @NAME.err,con:\r";c
   expect ".CMDP>" send "           end\r";c
   expect ".CMDP>" send "        $endb\r";c
   expect ".CMDP>" send "        load copy32\r";c
   expect ".CMDP>" send "        start ,com=@NAME.tmp,lis=con:\r";c
   expect ".CMDP>" send "     $termjob\r";c
   expect ".CMDP>" send "     enable etm\r";c
   expect ".CMDP>" send "     xdelete @NAME.obj,@NAME.tmp\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     $write ***    PASCAL     END OF TASK CODE @*/EOT/     ***\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  delete @NAME.err\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Process any additional parameters, up to ten of them. We use recursion\r";c
   expect ".CMDP>" send "* here but only one parameter and one level, so no real risk of running\r";c
   expect ".CMDP>" send "* into the CSS nesting limit (which is eight max).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @2  ; @0 @2, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @3  ; @0 @3, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @4  ; @0 @4, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @5  ; @0 @5, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @6  ; @0 @6, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @7  ; @0 @7, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @8  ; @0 @8, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @9  ; @0 @9, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @10 ; @0 @10,seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $exit\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label USAGE\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $write USAGE: @0 filename [,filename]... [,SEGINC=n]\r";c
   expect ".CMDP>" send "  $clear\r";c
   expect ".CMDP>" send "endb\r";c
   # PASL.CSS
   expect "\r\n*" send "alloc pasl.css,in,80 ; build pasl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,pas=1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # PASCL.CSS
   expect "\r\n*" send "alloc pascl.css,in,80 ; build pascl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "pasc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,pas=1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # PASCLG.CSS
   expect "\r\n*" send "alloc pasclg.css,in,80 ; build pasclg.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "pasc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,pas=1\r";c
   expect ".CMDP>" send "pasgo @1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # PASGO.CSS
   expect "\r\n*" send "alloc pasgo.css,in,80 ; build pasgo.css,append\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w . USAGE: @0 fnam [,[LU0],[LU1],[LU2],[LU3],[LU4],[LU5]]\r";c
   expect ".CMDP>" send "   $w .                   [,SEGINC=n]\r";c
   expect ".CMDP>" send "   $w .                   [,WRITE=outfd]\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w . NOTE: WRITELN GOES TO LU0\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifnx @1.tsk\r";c
   expect ".CMDP>" send "   $write FILE NOT FOUND: @1.TSK\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$def 2, WRITE,st(@@=/WRITE/) ld0 st(@=/WRITE/) ld0 st(@2) ld0 st(con:)\r";c
   expect ".CMDP>" send "$def 3, LU1,                                      st(@3) ld0 st()\r";c
   expect ".CMDP>" send "$def 4, LU2,                                      st(@4) ld0 st()\r";c
   expect ".CMDP>" send "$def 5, LU3,                                      st(@5) ld0 st()\r";c
   expect ".CMDP>" send "$def 6, LU4,                                      st(@6) ld0 st()\r";c
   expect ".CMDP>" send "$def 7, LU5,                                      st(@7) ld0 st()\r";c
   expect ".CMDP>" send "$def 8, SEG, st(@@=/SEGINC/) ld0 st(@=/SEGINC/) ld0 st(64)\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "prevent etm\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   load @1.tsk,@*/SEG/\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write LOAD @1.tsk,@*/SEG/ FAILED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   $ifx @1.asn\r";c
   expect ".CMDP>" send "      @1.asn\r";c
   expect ".CMDP>" send "   $else\r";c
   expect ".CMDP>" send "      $ifnnull @*/WRITE/ ; assign 0,@*/WRITE/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU1/   ; assign 1,@*/LU1/   ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU2/   ; assign 2,@*/LU2/   ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU3/   ; assign 3,@*/LU3/   ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU4/   ; assign 4,@*/LU4/   ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU5/   ; assign 5,@*/LU5/   ; $endc\r";c
   expect ".CMDP>" send "   $endc\r";c
   expect ".CMDP>" send "   display lu\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $w PROBLEMS WITH ASSIGNMENTS\r";c
   expect ".CMDP>" send "   cancel\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   start\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write @1.tsk WENT WRONG\r";c
   expect ".CMDP>" send "   $clear\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "enable etm\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "endb\r";c

   # CCC.CSS
   expect "\r\n*" send "alloc ccc.css,in,80 ; build ccc.css,append\r";c
   expect ".CMDP>" send "mtmonly\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* We could do more than ten arguments, but the MTM command line limits us\r";c
   expect ".CMDP>" send "* to 80 characters. Things go awry when the command line overruns.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @11\r";c
   expect ".CMDP>" send "     $write TOO MANY FILES ON COMMAND LINE, MAX 10.\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Require at least one positional parameter: filename without extension.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnull @1\r";c
   expect ".CMDP>" send "     $write MISSING FILENAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $local @NAME(10)  ; $set @NAME   = @1\r";c
   expect ".CMDP>" send "  $local @EXT(3)    ; $set @EXT    = C\r";c
   expect ".CMDP>" send "  $local @SEGINC(5) ; $set @SEGINC = 20\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifextension @NAME\r";c
   expect ".CMDP>" send "     $write EXTENSION NOT ALLOWED: @NAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnx @NAME.@EXT\r";c
   expect ".CMDP>" send "     $write FILE NOT FOUND: @NAME.@EXT\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Check if we want extra memory (seginc=n on the command line).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @=/SEGINC/\r";c
   expect ".CMDP>" send "     $set @SEGINC = @=/SEGINC/\r";c
   expect ".CMDP>" send "  $end\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  prevent etm\r";c
   expect ".CMDP>" send "  xdelete @NAME.1,@NAME.2,@NAME.cal,@NAME.obj\r";c
   expect ".CMDP>" send "  $write OS/32 C Compiler, aka. Whitesmiths C\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Preprocessor\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "    pp/s -zx -o@NAME.1 @NAME.c\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "    $goto CLEANUP\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Parsing pass of the C compiler\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "    pone/s -ul -b3 -n8 -o@NAME.2 @NAME.1\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "    $goto CLEANUP\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Code generating pass of the C compiler\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "    ptwo/s -m -o@NAME.cal @NAME.2\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "    $goto CLEANUP\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Assemble, distinguishing between upper and lowercase\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "    cu/s @NAME\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "    $goto CLEANUP\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  xdelete @NAME.1,@NAME.2,@NAME.cal\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Process any additional parameters, up to ten of them. We use recursion\r";c
   expect ".CMDP>" send "* here but only one parameter and one level, so no real risk of running\r";c
   expect ".CMDP>" send "* into the CSS nesting limit (which is eight max).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @2  ; @0 @2, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @3  ; @0 @3, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @4  ; @0 @4, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @5  ; @0 @5, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @6  ; @0 @6, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @7  ; @0 @7, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @8  ; @0 @8, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @9  ; @0 @9, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @10 ; @0 @10,seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $exit\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label USAGE\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $write USAGE: @0 filename [,filename]... [,SEGINC=n]\r";c
   expect ".CMDP>" send "  $clear\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label CLEANUP\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  xdelete @NAME.1,@NAME.2,@NAME.cal,@NAME.obj\r";c
   expect ".CMDP>" send "  enable etm\r";c
   expect ".CMDP>" send "  $write @NAME     THERE WERE ERRORS\r";c
   expect ".CMDP>" send "  $clear\r";c
   expect ".CMDP>" send "endb\r";c
   # CCL.CSS
   expect "\r\n*" send "alloc ccl.css,in,80 ; build ccl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,cc=1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # CCCL.CSS
   expect "\r\n*" send "alloc cccl.css,in,80 ; build cccl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "ccc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,cc=1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # CCCLG.CSS
   expect "\r\n*" send "alloc ccclg.css,in,80 ; build ccclg.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "ccc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,cc=1\r";c
   expect ".CMDP>" send "ccgo @1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # CCGO.CSS
   expect "\r\n*" send "alloc ccgo.css,in,80 ; build ccgo.css,append\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w . USAGE: @0 fnam [,[LU0],[LU1],[LU2],[LU3],[LU4],[LU5]]\r";c
   expect ".CMDP>" send "   $w .                   [,SEGINC=n]\r";c
   expect ".CMDP>" send "   $w .                   [,STDIN=infd]\r";c
   expect ".CMDP>" send "   $w .                   [,STDOUT=outfd]\r";c
   expect ".CMDP>" send "   $w .                   [,STDERR=outfd]\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w . NOTE: STDIN IS LU0, STDOUT LU1, AND STDERR LU2.\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifnx @1.tsk\r";c
   expect ".CMDP>" send "   $write FILE NOT FOUND: @1.TSK\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$def 2, STDIN, st(@@=/STDIN/)  ld0 st(@=/STDIN/)  ld0 st(@2) ld0 st(con:)\r";c
   expect ".CMDP>" send "$def 3, STDOUT,st(@@=/STDOUT/) ld0 st(@=/STDOUT/) ld0 st(@3) ld0 st(con:)\r";c
   expect ".CMDP>" send "$def 4, STDERR,st(@@=/STDERR/) ld0 st(@=/STDERR/) ld0 st(@4) ld0 st(con:)\r";c
   expect ".CMDP>" send "$def 5, LU3,                                          st(@5) ld0 st()\r";c
   expect ".CMDP>" send "$def 6, LU4,                                          st(@6) ld0 st()\r";c
   expect ".CMDP>" send "$def 7, LU5,                                          st(@7) ld0 st()\r";c
   expect ".CMDP>" send "$def 8, SEG,   st(@@=/SEGINC/) ld0 st(@=/SEGINC/) ld0 st(20)\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "prevent etm\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   load @1.tsk,@*/SEG/\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write LOAD @1.tsk,@*/SEG/ FAILED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   $ifx @1.asn\r";c
   expect ".CMDP>" send "      @1.asn\r";c
   expect ".CMDP>" send "   $else\r";c
   expect ".CMDP>" send "      $ifnnull @*/STDIN/  ; assign 0,@*/STDIN/  ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/STDOUT/ ; assign 1,@*/STDOUT/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/STDERR/ ; assign 2,@*/STDERR/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU3/    ; assign 3,@*/LU3/    ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU4/    ; assign 4,@*/LU4/    ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU5/    ; assign 5,@*/LU5/    ; $endc\r";c
   expect ".CMDP>" send "   $endc\r";c
   expect ".CMDP>" send "   display lu\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $w PROBLEMS WITH ASSIGNMENTS\r";c
   expect ".CMDP>" send "   cancel\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   start\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write @1.tsk WENT WRONG\r";c
   expect ".CMDP>" send "   $clear\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "enable etm\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "endb\r";c

   # CALC.CSS
   expect "\r\n*" send "alloc calc.css,in,80 ; build calc.css,append\r";c
   expect ".CMDP>" send "mtmonly\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* We could do more than ten arguments, but the MTM command line limits us\r";c
   expect ".CMDP>" send "* to 80 characters. Things go awry when the command line overruns.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @11\r";c
   expect ".CMDP>" send "     $write TOO MANY FILES ON COMMAND LINE, MAX 10.\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Require at least one positional parameter: filename without extension.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnull @1\r";c
   expect ".CMDP>" send "     $write MISSING FILENAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $local @NAME(10)  ; $set @NAME   = @1\r";c
   expect ".CMDP>" send "  $local @EXT(3)    ; $set @EXT    = CAL\r";c
   expect ".CMDP>" send "  $local @SEGINC(5) ; $set @SEGINC = 5\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifextension @NAME\r";c
   expect ".CMDP>" send "     $write EXTENSION NOT ALLOWED: @NAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnx @NAME.@EXT\r";c
   expect ".CMDP>" send "     $write FILE NOT FOUND: @NAME.@EXT\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Check if we want extra memory (seginc=n on the command line).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @=/SEGINC/\r";c
   expect ".CMDP>" send "     $set @SEGINC = @=/SEGINC/\r";c
   expect ".CMDP>" send "  $end\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Quiet compile: output to filename.err rather than printer or console.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  xdelete @NAME.obj,@NAME.err\r";c
   expect ".CMDP>" send "  allocate @NAME.obj,index,126\r";c
   expect ".CMDP>" send "  allocate @NAME.err,index,80\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "     load cal32,@SEGINC\r";c
   expect ".CMDP>" send "     assign 1,@NAME.@EXT,sro\r";c
   expect ".CMDP>" send "     assign 2,@NAME.obj\r";c
   expect ".CMDP>" send "     assign 3,@NAME.err\r";c
   expect ".CMDP>" send "     start\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* If the compilation errored, show filename.err, delete any object file,\r";c
   expect ".CMDP>" send "* and bail out. Otherwise, remove the error file, and move on. Unfortunate\r";c
   expect ".CMDP>" send "* that COPY/32 clobbers (zeros) the compiler end task status, and SET\r";c
   expect ".CMDP>" send "* CODE seems not to update current(eot). So we will echo the compiler EOT\r";c
   expect ".CMDP>" send "* to avoid giving a false impression that everything went smoothly.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "     $define 1,EOT,current(eot)\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     prevent etm\r";c
   expect ".CMDP>" send "     $job\r";c
   expect ".CMDP>" send "        $build @NAME.tmp\r";c
   expect ".CMDP>" send "           option noterm,nopsfm\r";c
   expect ".CMDP>" send "           copy @NAME.err,con:\r";c
   expect ".CMDP>" send "           end\r";c
   expect ".CMDP>" send "        $endb\r";c
   expect ".CMDP>" send "        load copy32\r";c
   expect ".CMDP>" send "        start ,com=@NAME.tmp,lis=con:\r";c
   expect ".CMDP>" send "     $termjob\r";c
   expect ".CMDP>" send "     enable etm\r";c
   expect ".CMDP>" send "     xdelete @NAME.obj,@NAME.tmp\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     $write ***    CAL/32 END OF TASK CODE @*/EOT/     ***\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  delete @NAME.err\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Process any additional parameters, up to ten of them. We use recursion\r";c
   expect ".CMDP>" send "* here but only one parameter and one level, so no real risk of running\r";c
   expect ".CMDP>" send "* into the CSS nesting limit (which is eight max).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @2  ; @0 @2, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @3  ; @0 @3, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @4  ; @0 @4, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @5  ; @0 @5, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @6  ; @0 @6, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @7  ; @0 @7, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @8  ; @0 @8, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @9  ; @0 @9, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @10 ; @0 @10,seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $exit\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label USAGE\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $write USAGE: @0 filename [,filename]... [,SEGINC=n]\r";c
   expect ".CMDP>" send "  $clear\r";c
   expect ".CMDP>" send "endb\r";c
   # CALL.CSS
   expect "\r\n*" send "alloc call.css,in,80 ; build call.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # CALCL.CSS
   expect "\r\n*" send "alloc calcl.css,in,80 ; build calcl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "calc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # CALCLG.CSS
   expect "\r\n*" send "alloc calclg.css,in,80 ; build calclg.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "calc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "calgo @1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # CALGO.CSS
   expect "\r\n*" send "alloc calgo.css,in,80 ; build calgo.css,append\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w . USAGE: @0 fnam [,[LU0],[LU1],[LU2],[LU3],[LU4],[LU4]]\r";c
   expect ".CMDP>" send "   $w .                   [,SEGINC=n]\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifnx @1.tsk\r";c
   expect ".CMDP>" send "   $write FILE NOT FOUND: @1.TSK\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$def 2, LU0,                             st(@2) ld0 st(con:)\r";c
   expect ".CMDP>" send "$def 3, LU1,                             st(@3) ld0 st()\r";c
   expect ".CMDP>" send "$def 4, LU2,                             st(@4) ld0 st()\r";c
   expect ".CMDP>" send "$def 5, LU3,                             st(@5) ld0 st()\r";c
   expect ".CMDP>" send "$def 6, LU4,                             st(@6) ld0 st()\r";c
   expect ".CMDP>" send "$def 7, LU5,                             st(@7) ld0 st()\r";c
   expect ".CMDP>" send "$def 8, SEG, st(@@=/SEGINC/) ld0 st(@=/SEGINC/) ld0 st(5)\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "prevent etm\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   load @1.tsk,@*/SEG/\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write LOAD @1.tsk,@*/SEG/ FAILED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   $ifx @1.asn\r";c
   expect ".CMDP>" send "      @1.asn\r";c
   expect ".CMDP>" send "   $else\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU0/ ; assign 0,@*/LU0/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU1/ ; assign 1,@*/LU1/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU2/ ; assign 2,@*/LU2/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU3/ ; assign 3,@*/LU3/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU4/ ; assign 4,@*/LU4/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU5/ ; assign 5,@*/LU5/ ; $endc\r";c
   expect ".CMDP>" send "   $endc\r";c
   expect ".CMDP>" send "   display lu\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $w PROBLEMS WITH ASSIGNMENTS\r";c
   expect ".CMDP>" send "   cancel\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   start\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write @1.tsk WENT WRONG\r";c
   expect ".CMDP>" send "   $clear\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "enable etm\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "endb\r";c

   # MACC.CSS
   expect "\r\n*" send "alloc macc.css,in,80 ; build macc.css,append\r";c
   expect ".CMDP>" send "mtmonly\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* We could do more than ten arguments, but the MTM command line limits us\r";c
   expect ".CMDP>" send "* to 80 characters. Things go awry when the command line overruns.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @11\r";c
   expect ".CMDP>" send "     $write TOO MANY FILES ON COMMAND LINE, MAX 10.\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Require at least one positional parameter: filename without extension.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnull @1\r";c
   expect ".CMDP>" send "     $write MISSING FILENAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $local @NAME(10)  ; $set @NAME   = @1\r";c
   expect ".CMDP>" send "  $local @EXT(3)    ; $set @EXT    = MAC\r";c
   expect ".CMDP>" send "  $local @SEGINC(5) ; $set @SEGINC = 50\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifextension @NAME\r";c
   expect ".CMDP>" send "     $write EXTENSION NOT ALLOWED: @NAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnx @NAME.@EXT\r";c
   expect ".CMDP>" send "     $write FILE NOT FOUND: @NAME.@EXT\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Check if we want extra memory (seginc=n on the command line).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @=/SEGINC/\r";c
   expect ".CMDP>" send "     $set @SEGINC = @=/SEGINC/\r";c
   expect ".CMDP>" send "  $end\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Run macro processor\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  xdelete @NAME.cal,@NAME.obj,@NAME.err\r";c
   expect ".CMDP>" send "  allocate @NAME.cal,index,80\r";c
   expect ".CMDP>" send "  allocate @NAME.obj,index,126\r";c
   expect ".CMDP>" send "  allocate @NAME.err,index,80\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "     prevent etm\r";c
   expect ".CMDP>" send "     load macro32,@SEGINC\r";c
   expect ".CMDP>" send "     assign  1,@NAME.mac,sro\r";c
   expect ".CMDP>" send "     assign  2,@NAME.cal\r";c
   expect ".CMDP>" send "     assign  3,@NAME.err\r";c
   expect ".CMDP>" send "     assign  8,sys:sysstruc.mlb/s\r";c
   expect ".CMDP>" send "     assign  9,sys:sysmacro.mlb/s\r";c
   expect ".CMDP>" send "     assign 10,sys:sysmac32.mlb/s\r";c
   expect ".CMDP>" send "     start ,mlibs=(8,9,10),batch\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "     $goto ERRORS\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Run assembler\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $job\r";c
   expect ".CMDP>" send "     prevent etm\r";c
   expect ".CMDP>" send "     load cal32,@SEGINC\r";c
   expect ".CMDP>" send "     assign   1,@NAME.cal,sro\r";c
   expect ".CMDP>" send "     assign   2,@NAME.obj\r";c
   expect ".CMDP>" send "     assign   3,@NAME.err\r";c
   expect ".CMDP>" send "     tempfile 5,INDEX,256/5\r";c
   expect ".CMDP>" send "     start ,bat squ=3 cr erl freze\r";c
   expect ".CMDP>" send "  $termjob\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* If the macro or assembly errored, show filename.err, delete intermediary\r";c
   expect ".CMDP>" send "* files, and bail out. Otherwise, remove the error file, and move on.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $label ERRORS\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifne 0\r";c
   expect ".CMDP>" send "     $define 1,EOT,current(eot)\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     prevent etm\r";c
   expect ".CMDP>" send "     $job\r";c
   expect ".CMDP>" send "        $build @NAME.tmp\r";c
   expect ".CMDP>" send "           option noterm,nopsfm\r";c
   expect ".CMDP>" send "           copy @NAME.err,con:\r";c
   expect ".CMDP>" send "           end\r";c
   expect ".CMDP>" send "        $endb\r";c
   expect ".CMDP>" send "        load copy32\r";c
   expect ".CMDP>" send "        start ,com=@NAME.tmp,lis=con:\r";c
   expect ".CMDP>" send "     $termjob\r";c
   expect ".CMDP>" send "     enable etm\r";c
   expect ".CMDP>" send "     xdelete @NAME.cal,@NAME.obj,@NAME.tmp\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     $write ***    CAL/32 MACRO  END OF TASK CODE @*/EOT/     ***\r";c
   expect ".CMDP>" send "     $write\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  delete @NAME.cal,@NAME.err\r";c
   expect ".CMDP>" send "  enable etm\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Process any additional parameters, up to ten of them. We use recursion\r";c
   expect ".CMDP>" send "* here but only one parameter and one level, so no real risk of running\r";c
   expect ".CMDP>" send "* into the CSS nesting limit (which is eight max).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @2  ; @0 @2, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @3  ; @0 @3, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @4  ; @0 @4, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @5  ; @0 @5, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @6  ; @0 @6, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @7  ; @0 @7, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @8  ; @0 @8, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @9  ; @0 @9, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @10 ; @0 @10,seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $exit\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label USAGE\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $write USAGE: @0 filename [,filename]... [,SEGINC=n]\r";c
   expect ".CMDP>" send "  $clear\r";c
   expect ".CMDP>" send "endb\r";c
   # MACL.CSS
   expect "\r\n*" send "alloc macl.css,in,80 ; build macl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # MACCL.CSS
   expect "\r\n*" send "alloc maccl.css,in,80 ; build maccl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "macc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # MACCLG.CSS
   expect "\r\n*" send "alloc macclg.css,in,80 ; build macclg.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "macc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "macgo @1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # MACGO.CSS
   expect "\r\n*" send "alloc macgo.css,in,80 ; build macgo.css,append\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w . USAGE: @0 fnam [,[LU0],[LU1],[LU2],[LU3],[LU4],[LU4]]\r";c
   expect ".CMDP>" send "   $w .                   [,SEGINC=n]\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifnx @1.tsk\r";c
   expect ".CMDP>" send "   $write FILE NOT FOUND: @1.TSK\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$def 2, LU0,                             st(@2) ld0 st(con:)\r";c
   expect ".CMDP>" send "$def 3, LU1,                             st(@3) ld0 st()\r";c
   expect ".CMDP>" send "$def 4, LU2,                             st(@4) ld0 st()\r";c
   expect ".CMDP>" send "$def 5, LU3,                             st(@5) ld0 st()\r";c
   expect ".CMDP>" send "$def 6, LU4,                             st(@6) ld0 st()\r";c
   expect ".CMDP>" send "$def 7, LU5,                             st(@7) ld0 st()\r";c
   expect ".CMDP>" send "$def 8, SEG, st(@@=/SEGINC/) ld0 st(@=/SEGINC/) ld0 st(5)\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "prevent etm\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   load @1.tsk,@*/SEG/\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write LOAD @1.tsk,@*/SEG/ FAILED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   $ifx @1.asn\r";c
   expect ".CMDP>" send "      @1.asn\r";c
   expect ".CMDP>" send "   $else\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU0/ ; assign 0,@*/LU0/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU1/ ; assign 1,@*/LU1/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU2/ ; assign 2,@*/LU2/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU3/ ; assign 3,@*/LU3/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU4/ ; assign 4,@*/LU4/ ; $endc\r";c
   expect ".CMDP>" send "      $ifnnull @*/LU5/ ; assign 5,@*/LU5/ ; $endc\r";c
   expect ".CMDP>" send "   $endc\r";c
   expect ".CMDP>" send "   display lu\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $w PROBLEMS WITH ASSIGNMENTS\r";c
   expect ".CMDP>" send "   cancel\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   start\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write @1.tsk WENT WRONG\r";c
   expect ".CMDP>" send "   $clear\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "enable etm\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "endb\r";c

   # RATC.CSS
   expect "\r\n*" send "alloc ratc.css,in,80 ; build ratc.css,append\r";c
   expect ".CMDP>" send "mtmonly\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* We could do more than ten arguments, but the MTM command line limits us\r";c
   expect ".CMDP>" send "* to 80 characters. Things go awry when the command line overruns.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @11\r";c
   expect ".CMDP>" send "     $write TOO MANY FILES ON COMMAND LINE, MAX 10.\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Require at least one positional parameter: filename without extension.\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnull @1\r";c
   expect ".CMDP>" send "     $write MISSING FILENAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $local @NAME(10)  ; $set @NAME   = @1\r";c
   expect ".CMDP>" send "  $local @EXT(3)    ; $set @EXT    = R\r";c
   expect ".CMDP>" send "  $local @SEGINC(5) ; $set @SEGINC = 50\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifextension @NAME\r";c
   expect ".CMDP>" send "     $write EXTENSION NOT ALLOWED: @NAME\r";c
   expect ".CMDP>" send "     $goto USAGE\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnx @NAME.@EXT\r";c
   expect ".CMDP>" send "     $write FILE NOT FOUND: @NAME.@EXT\r";c
   expect ".CMDP>" send "     $clear\r";c
   expect ".CMDP>" send "  $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Check if we want extra memory (seginc=n on the command line).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @=/SEGINC/\r";c
   expect ".CMDP>" send "     $set @SEGINC = @=/SEGINC/\r";c
   expect ".CMDP>" send "  $end\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Ratfor-to-Fortran pass\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  xdelete @NAME.ftn,@NAME.obj\r";c
   expect ".CMDP>" send "  ratfor <@NAME.r >@NAME.ftn\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Fortran compilation step and cleanup\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  forc @NAME\r";c
   expect ".CMDP>" send "  xdelete @NAME.ftn\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "* Process any additional parameters, up to ten of them. We use recursion\r";c
   expect ".CMDP>" send "* here but only one parameter and one level, so no real risk of running\r";c
   expect ".CMDP>" send "* into the CSS nesting limit (which is eight max).\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $ifnnull @2  ; @0 @2, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @3  ; @0 @3, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @4  ; @0 @4, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @5  ; @0 @5, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @6  ; @0 @6, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @7  ; @0 @7, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @8  ; @0 @8, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @9  ; @0 @9, seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $ifnnull @10 ; @0 @10,seginc=@=/SEGINC/ ; $endc\r";c
   expect ".CMDP>" send "  $exit\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$label USAGE\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "  $write USAGE: @0 filename [,filename]... [,SEGINC=n]\r";c
   expect ".CMDP>" send "  $clear\r";c
   expect ".CMDP>" send "endb\r";c
   # RATL.CSS
   expect "\r\n*" send "alloc ratl.css,in,80 ; build ratl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,rat=1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # RATCL.CSS
   expect "\r\n*" send "alloc ratcl.css,in,80 ; build ratcl.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "ratc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,rat=1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # RATCLG.CSS
   expect "\r\n*" send "alloc ratclg.css,in,80 ; build ratclg.css,append\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: @0 filename [, filename...]\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "ratc @1,@2,@3,@4,@5,@6,@7,@8,@9,@10\r";c
   expect ".CMDP>" send "cogolink @1,@2,@3,@4,@5,@6,@7,@8,@9,@10,rat=1\r";c
   expect ".CMDP>" send "ratgo @1\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # RATGO.CSS
   expect "\r\n*" send "alloc ratgo.css,in,80 ; build ratgo.css,append\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w . USAGE: @0 fnam\r";c
   expect ".CMDP>" send "   $w .\r";c
   expect ".CMDP>" send "   $w\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifext @1\r";c
   expect ".CMDP>" send "   $write FILE EXTENSION NOT ALLOWED\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "$ifnx @1.tsk\r";c
   expect ".CMDP>" send "   $write FILE NOT FOUND: @1.TSK\r";c
   expect ".CMDP>" send "   $exit\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$ifnx @1.css\r";c
   expect ".CMDP>" send "   makecss @1\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "@1 @2 @3 @4 @5 @6 @7 @8 @9\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "enable etm\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "*\r";c
   expect ".CMDP>" send "endb\r";c

   # MAKECSS.CSS
   expect "\r\n*" send "alloc makecss.css,in,80 ; build makecss.css,append\r";c
   expect ".CMDP>" send "prevent etm\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "   $write USAGE: MAKECSS name\r";c
   expect ".CMDP>" send "   $clear\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$ifx @1.css\r";c
   expect ".CMDP>" send "   $write @1.CSS ALREADY EXISTS\r";c
   expect ".CMDP>" send "   $clear\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$define 1,USERNAME,current(username)\r";c
   expect ".CMDP>" send "$define 2,PRIVATE,current(private)\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$build @*1.arg\r";c
   expect ".CMDP>" send "@*1\r";c
   expect ".CMDP>" send "@*2\r";c
   expect ".CMDP>" send "NO PIPES\r";c
   expect ".CMDP>" send "@1@2@3@4@5@6@7@8@9\r";c
   expect ".CMDP>" send "$endb\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "load .bg,makecss.tsk,50\r";c
   expect ".CMDP>" send "as 1,@*1.arg\r";c
   expect ".CMDP>" send "as 3,con:\r";c
   expect ".CMDP>" send "start\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$w one\r";c
   expect ".CMDP>" send "$build @*1.arg\r";c
   expect ".CMDP>" send "get @1.css\r";c
   expect ".CMDP>" send "sub/DEFINE G/DEFINE /1-\r";c
   expect ".CMDP>" send "sub/*G/*/1-\r";c
   expect ".CMDP>" send "done\r";c
   expect ".CMDP>" send "$endb\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$w two\r";c
   expect ".CMDP>" send "load edit32\r";c
   expect ".CMDP>" send "start ,com=@*1.arg,list=con:\r";c
   expect ".CMDP>" send "xdelete @*1.arg\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # RATFOR.CSS
   expect "\r\n*" send "alloc ratfor.css,in,80 ; build ratfor.css,append\r";c
   expect ".CMDP>" send "prevent etm\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$define 1,USERNAME,current(username)\r";c
   expect ".CMDP>" send "$define 2,PRIVATE,current(private)\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$build @*1.arg\r";c
   expect ".CMDP>" send "@*1\r";c
   expect ".CMDP>" send "@*2\r";c
   expect ".CMDP>" send "NO PIPES\r";c
   expect ".CMDP>" send "@1@2@3@4@5@6@7@8@9\r";c
   expect ".CMDP>" send "$endb\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$ifnx io.     ; copy sys:io./s,io.         ; $endc\r";c
   expect ".CMDP>" send "$ifnx common. ; copy sys:common./s,common. ; $endc\r";c
   expect ".CMDP>" send "$ifnx libdef. ; copy sys:libdef./s,libdef. ; $endc\r";c
   expect ".CMDP>" send "$ifnx pedef.  ; copy sys:pedef./s,pedef.   ; $endc\r";c
   expect ".CMDP>" send "$ifnx ratdef. ; copy sys:ratdef./s,ratdef. ; $endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$job\r";c
   expect ".CMDP>" send "   load .bg,ratfor.tsk,5\r";c
   expect ".CMDP>" send "   assign 1,@*1.arg\r";c
   expect ".CMDP>" send "   assign 3,con:\r";c
   expect ".CMDP>" send "   $write RATFOR TRANSLATOR, IUG0523 (LATER VERSION WITH DW CSS MODS)\r";c
   expect ".CMDP>" send "   start\r";c
   expect ".CMDP>" send "$term\r";c
   expect ".CMDP>" send "$ifne 0\r";c
   expect ".CMDP>" send "   $write THERE WERE ERRORS\r";c
   expect ".CMDP>" send "   $clear\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "enable etm\r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c
   # DIFF.CSS
   expect "\r\n*" send "alloc diff.css,in,80 ; build diff.css,append\r";c
   expect ".CMDP>" send "pre etm\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$define 1,USERNAME,current(username)\r";c
   expect ".CMDP>" send "$define 2,PRIVATE,current(private)\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$build @*1.arg\r";c
   expect ".CMDP>" send "@*1\r";c
   expect ".CMDP>" send "@*2\r";c
   expect ".CMDP>" send "NO PIPES\r";c
   expect ".CMDP>" send "$endb\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "$write\r";c
   expect ".CMDP>" send "$build @*1.arg,append\r";c
   expect ".CMDP>" send "-h\r";c
   expect ".CMDP>" send "$endb\r";c
   expect ".CMDP>" send "$else\r";c
   expect ".CMDP>" send "$build @*1.arg,append\r";c
   expect ".CMDP>" send "@1@2@3@4@5@6@7@8@9\r";c
   expect ".CMDP>" send "$endb\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "load .bg,diff.tsk,5\r";c
   expect ".CMDP>" send "task .bg\r";c
   expect ".CMDP>" send "as 1,@*1.arg\r";c
   expect ".CMDP>" send "as 3,con:\r";c
   expect ".CMDP>" send "start\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$ifnull @1\r";c
   expect ".CMDP>" send "$write\r";c
   expect ".CMDP>" send "$write\r";c
   expect ".CMDP>" send "$write example: diff -v file1 file2\r";c
   expect ".CMDP>" send "$write\r";c
   expect ".CMDP>" send "$endc\r";c
   expect ".CMDP>" send "xdelete df1.000,df1.001,df1.002,df1.003,df1.004\r";c
   expect ".CMDP>" send " \r";c
   expect ".CMDP>" send "$exit\r";c
   expect ".CMDP>" send "endb\r";c

:shutdown-sequence

   expect "\r\n*" send "shutdown\r";c
   expect     "\r\n*MARK DSC4 OFF BEFORE YOU GO" send "mark dsc4:,off ; display devices\r";c
   expect "*\177\177MARK DSC4 OFF BEFORE YOU GO" send "mark dsc4:,off ; display devices\r";c
   expect "DSC0  C8 0000   OFF\r\nDSC1  C6 0000   OFF\r\nDSC2  C7 0000   OFF\r\nDSC3  FD 0000   OFF\r\nDSC4  FC 0000   OFF\r\nDSC5  FE 0000   OFF\r\n" detach pas ; exit

   boot dm0
